<?xml version="1.0" encoding="utf-8" ?>
<ContentPage 
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    x:Class="PasswordManager.Views.RegistrationPage"
    xmlns:vm="clr-namespace:PasswordManager.ViewModels"
    Shell.NavBarIsVisible="False"
>
    <!-- 
        Bind the view to the RegistrationViewModel
        All ViewModels are referenced in the XAML namespace above: xmlns:vm="clr-namespace:PasswordManager.ViewModels"
    -->
    <ContentPage.BindingContext>
        <vm:RegistrationViewModel />
    </ContentPage.BindingContext>
    
    <!-- Set the view that contains the content of the page -->
    <ContentPage.Content>
        <!-- 
            A StackLayout organizes child views in a one-dimensional stack.
            By default, a StackLayout is oriented vertically.
        -->
        <StackLayout
            VerticalOptions="CenterAndExpand"
        >
            <StackLayout>
                <Label 
                    Text="Register"
                    FontSize="Title"
                    HorizontalOptions="CenterAndExpand"
                    TextColor="Black"
                />
            </StackLayout>
            
            <StackLayout
                Padding="30, 20"
                VerticalOptions="CenterAndExpand"
                
            >
                <Frame CornerRadius="5" HasShadow="true">
                    <StackLayout>
                        <!-- Error-box that is bound to the error properties in the viewmodel -->
                        <Frame 
                            CornerRadius="5" 
                            HasShadow="true"
                            BackgroundColor="Red"
                            Padding="10, 20"
                            Margin="0, 10"
                            IsVisible="{Binding ErrorDisplay}"
                        >
                            <Label
                                Text="{Binding ErrorMessage}"
                                FontSize="Small"
                                TextColor="White"
                            />
                        </Frame>

                        <!-- 
                            Entries that are bound to the user properties in the viewmodel.
                            Entries are two-way by default so the View can update the ViewModel and vice-versa.
                        -->
                        <Entry 
                            x:Name="Username"
                            Placeholder="Username" 
                            Text="{Binding UsernameInput}"
                
                            FontSize="Medium"
                            IsSpellCheckEnabled="false"    
                            ClearButtonVisibility="WhileEditing"
                        />
                        <Entry 
                            x:Name="Password"
                            Placeholder="Password" 
                            IsPassword="True" 
                            Text="{Binding PasswordInput}"
                
                            FontSize="Medium"
                            IsSpellCheckEnabled="false"    
                            ClearButtonVisibility="WhileEditing"
                        />
                        
                        <!-- 
                            A button with a command that binds to the viewmodel. 
                            The command runs when the button is clicked.
                        -->
                        <Button 
                            Text="Register"
                            Command="{Binding RegisterUserCommand}"
                
                            BackgroundColor="DarkGreen"
                            TextColor="White"
                            CornerRadius="5"
                            Padding="20, 0"
                            Margin="0, 20, 0, 0"
                        />
                    </StackLayout>
                </Frame>
            </StackLayout>
            <StackLayout>
                <!-- 
                    A label with a command that binds to the viewmodel. 
                    The command runs when the label is clicked with the help of TapGestureRecognizer which is used for tap detection.
                -->
                <Label 
                    Text="Back to login"
                    x:Name="Register" 
                    HorizontalOptions="CenterAndExpand"
                    TextDecorations="Underline"
                    FontSize="Medium"
                >
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding GotoLoginCommand}" />
                    </Label.GestureRecognizers>
                </Label>
            </StackLayout>
        </StackLayout>
        
    </ContentPage.Content>
</ContentPage>